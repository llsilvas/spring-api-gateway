server:
  port: 9999
spring:
  application:
    name: spring-api-gateway
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${KEYCLOAK_URL:localhost:8090}/realms/myrealm/protocol/openid-connect/certs

  elasticsearch:
    client:
      elc:
        default:
          uris: localhost:9200
          username: elastic
          password: admin
    repositories:
      enabled: true
    # Rotas para servi√ßos externos
  cloud:
    gateway:
      routes:
      - id: users
        uri: http://localhost:8091
        predicates:
          - Path=/users/**
        filters:
          - name: CircuitBreaker
            args:
              name: userServiceCircuitBreaker
              fallbackUri: forward:/fallback/user

resilience4j:
  circuitbreaker:
    instances:
      userServiceCircuitBreaker:
        register-health-indicator: true
        sliding-window-type: COUNT_BASED
        sliding-window-size: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state:
          seconds: 30
        permitted-number-of-calls-in-half-open-state: 3
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 100
        minimumNumberOfCalls: 10
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 30s


logging:
  level:
    root: INFO
    br.dev.leandro.spring.cloud.filter.AuditGlobalFilter: INFO
    org.springframework.web: INFO
    org.springframework.boot: INFO
    org.springframework.cloud: INFO
    org.springframework.security: INFO
    org.elasticsearch.client: INFO
    org.springframework.data.elasticsearch: INFO
    org.springframework.cloud.gateway: INFO
    io.github.resilience4j: INFO
    reactor.netty: INFO
    com.github.loki4j.logback: INFO
