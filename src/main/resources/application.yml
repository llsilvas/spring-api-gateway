server:
  port: 9999
spring:
  application:
    name: spring-api-gateway
#  config:
#    import: optional:configserver:http://${SPRING_CONFIG_SERVER:localhost}:8888 # URL do Config Server

  cloud:
    config:
      enabled: false

    # Rotas para serviços externos

    gateway:
      routes:
        - id: user-service
          uri: http://localhost:8091 # Endereço do User Service
          predicates:
            - Path=/api/users/** # Requisições que começam com /api/users/
          filters:
            - name: CircuitBreaker
              args:
                name: userServiceCB
                fallbackUri: forward:/fallback/user
                statusCode: 500,503,404
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_URL:localhost}:8443/realms/event-management
          jwk-set-uri: http://${KEYCLOAK_URL:localhost}:8443/realms/event-management/protocol/openid-connect/certs
  keycloak:
    admin:
      client-id: ${KEYCLOAK_CLIENT_ID:user-service-admin}
      client-secret: ${KEYCLOAK_CLIENT_SECRET:default-secret}  # Nunca manter senhas reais aqui, apenas para fallback
      auth-server-url: http://${KEYCLOAK_AUTH_SERVER_URL:localhost:8443}
      realm: ${KEYCLOAK_REALM:event-management}

  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: 5672
    connection-timeout: 5

loki:
  url: "http://${LOKI_URL:localhost}:3100/loki/api/v1/push"
  jobName: ${LOKI_JOB_NAME:spring-event-service}

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus, info, refresh, bus-refresh, circuitbreakers
  tracing:
    sampling:
      probability: 1.0  # 100% das requisições serão rastreadas

resilience4j:
  circuitbreaker:
    instances:
      userServiceCB:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s

logging:
  pattern:
    correlation: '%X{traceId:-} %X{spanId:-}'
    level: '%-5level [${spring.application.name}]'
  include-application-name: true
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.boot: INFO
    org.springframework.security: INFO
    org.springframework.cloud.bus: INFO
    org.springframework.cloud: INFO
    org.springframework.cloud.config: INFO
    org.keycloak: INFO
    io.opentelemetry: INFO
    io.micrometer: INFO
otel:
  logs:
    exporter: none
  metrics:
    exporter: none